{
	"info": {
		"_postman_id": "09ac0eca-8ca7-4250-8c49-58f9df77d059",
		"name": "API Tienda Deportiva",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "45651569"
	},
	"item": [
		{
			"name": "Obtener productos",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Código de estado es 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"La respuesta debe ser un array\", function () {\r",
							"  const jsonData = pm.response.json();\r",
							"  pm.expect(jsonData).to.be.an(\"array\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/api/productos",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"productos"
					]
				}
			},
			"response": []
		},
		{
			"name": "Crear producto",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Código de estado es 201 - Creado\", function () {\r",
							"  pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"El producto creado tiene un ID\", function () {\r",
							"  const jsonData = pm.response.json();\r",
							"  pm.expect(jsonData).to.have.property(\"id\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"nombre\": \"Bicicleta ciclismo\",\r\n  \"descripcion\": \"Bicicleta de competicion para montaña\",\r\n  \"precio\": 129.99,\r\n  \"stock\": 100,\r\n  \"marca\": \"Rockrider\",\r\n  \"categoria\": { \"id\": 5 }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/api/productos",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"productos"
					]
				}
			},
			"response": []
		},
		{
			"name": "Actualizar producto",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Código de estado es 200 - OK\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Producto actualizado correctamente\", function () {\r",
							"  const jsonData = pm.response.json();\r",
							"  pm.expect(jsonData).to.have.property(\"nombre\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"nombre\": \"Bicicleta\",\r\n  \"descripcion\": \"Ciclismo de montaña\",\r\n  \"precio\": 128.99,\r\n  \"stock\": 110,\r\n  \"marca\": \"Rockrider\",\r\n  \"categoria\": { \"id\": 5 }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/api/productos/9",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"productos",
						"9"
					]
				}
			},
			"response": []
		},
		{
			"name": "Actualizar stock",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();\r",
							"const requestBody = JSON.parse(pm.request.body.raw); // Captura el body enviado\r",
							"const cantidad = requestBody.cantidad; // Extrae la cantidad\r",
							"\r",
							"const stockAnterior = parseInt(pm.environment.get(\"stockAnterior\"));\r",
							"\r",
							"pm.test(\"Código de estado es 200 - OK\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"El stock fue actualizado correctamente\", function () {\r",
							"  pm.expect(jsonData.stock).to.eql(stockAnterior + cantidad);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"cantidad\":105\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/api/productos/9/stock",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"productos",
						"9",
						"stock"
					]
				}
			},
			"response": []
		},
		{
			"name": "Eliminar producto",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Código de estado es 204 - Sin contenido\", function () {\r",
							"  pm.response.to.have.status(204);\r",
							"});\r",
							"\r",
							"pm.test(\"El cuerpo de la respuesta está vacío\", function () {\r",
							"  pm.expect(pm.response.text()).to.eql(\"\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/api/productos/9",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"productos",
						"9"
					]
				}
			},
			"response": []
		},
		{
			"name": "Métodos permitidos",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Métodos permitidos presentes\", function () {\r",
							"  pm.expect(pm.response.headers.get(\"Allow\")).to.include(\"GET\");\r",
							"  pm.expect(pm.response.headers.get(\"Allow\")).to.include(\"POST\");\r",
							"  pm.expect(pm.response.headers.get(\"Allow\")).to.include(\"PUT\");\r",
							"  pm.expect(pm.response.headers.get(\"Allow\")).to.include(\"DELETE\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "OPTIONS",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/api/productos",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"productos"
					]
				}
			},
			"response": []
		}
	]
}